#include<iostream>
#include<string.h>
using namespace std;
class HashFunction
{
typedef struct hash
	{
		long key;
		char name[10];
	}hash;
	hash h[10];
	public:
		HashFunction();
		void insert();
		void display();
		int find(long);
		void Delete(long);
};
HashFunction::HashFunction()
{
	int i;
	for(i=0;i<10;i++)
	{
		h[i].key=-1;
		strcpy(h[i].name,"NULL");
	}
}
void HashFunction::Delete(long k)
{
	int index=find(k);
	if(index==-1)
	{
		cout<<"\n\tKey Not Found";
	}
	else
	{
		h[index].key=-1;
		strcpy(h[index].name,"NULL");
		cout<<"\n\tKey is Deleted";
	}
}
int HashFunction::find(long k)
{
	for(int i=0;i<10;i++)
	{
		if(h[i].key==k)
		{
			cout<<"\n\t"<<h[i].key<<" is found at "<<i<<" Location With Name "<<h[i].name;
			return i;
		}
	}
	return -1;
}
void HashFunction::display()
{
	int i;
	cout<<"\n\t\tKey\t\tName";
	for(i=0;i<10;i++)
	{
		cout<<"\n\th["<<i<<"]\t"<<h[i].key<<"\t\t"<<h[i].name;
	}
}
void HashFunction::insert()
{
	char ans,n[10],ntemp[10];
	long k,temp;
	int v,hi,cnt=0,flag=0,i;
	do
	{
		if(cnt>=2)
		{
			cout<<"\n\tHash Table is Full";
			break;
		}
		cout<<"\n\tEnter a Telephone No:";
		cin>>k;
		cout<<"\n\tEnter a Client Name:";
		cin>>n;
		hi=k%10;
		if(h[hi].key==-1)
		{
			h[hi].key=k;
			strcpy(h[hi].name,n);
		}
		else
		{
			if(h[hi].key%10!=hi)
			{
				temp=h[hi].key;
				strcpy(ntemp,h[hi].name);
				h[hi].key=k;
				strcpy(h[hi].name,n);
				for(i=hi+1;i<10;i++)
				{
					if(h[i].key==-1)
					{
						h[i].key=temp;
						strcpy(h[i].name,ntemp);
						flag=1;
						break;
					}
				}
				for(i=0;i<hi && flag==0;i++)
				{
					if(h[i].key==-1)
					{
						h[i].key=temp;
						strcpy(h[i].name,ntemp);
						break;
					}
				}
			}
			else
			{
				for(i=hi+1;i<10;i++)
				{
					if(h[i].key==-1)
					{
						h[i].key=k;
						strcpy(h[i].name,n);
						flag=1;
						break;
					}
				}
				for(i=0;i<hi && flag==0;i++)
				{
					if(h[i].key==-1)
					{
						h[i].key=k;
						strcpy(h[i].name,n);
						break;
					}
				}
			}
		}
		flag=0;
		cnt++;
		cout<<"\n\t.....Do you want to insert more key:y/n:";
		cin>>ans;
	}while(ans=='y'||ans=='Y');
}
int main()
{
	long k;
	int ch,index;
	char ans;
	HashFunction obj;
	do
	{
		cout<<"\n\t*****Telephone(ADT)*****";
		cout<<"\n\t1. Insert\n\t2. Display\n\t3. Find\n\t4. Delete\n\t5. Exit";
		cout<<"\n\t.....Enter Your Choice:";
		cin>>ch;
		switch(ch)
		{
			case 1:
				obj.insert();
				break;
			case 2:
				obj.display();
			    break;
			case 3:	
			    cout<<"\n\tEnter a key which you want to search:";
			    cin>>k;
			    index=obj.find(k);
			    if(index==-1)
			    {
				    cout<<"\n\tKey Not Found";
			    }
			    break;
			case 4:
			    cout<<"\n\tEnter a key which you want to delete:";
			    cin>>k;
			    obj.Delete(k);
			    break;
			case 5:
				cout<<"Exiting program";
			    break;	
		}
	}while(ch!=5);
	return 0;
}


OUTPUT:
*****Telephone(ADT)*****
	1. Insert
	2. Display
	3. Find
	4. Delete
	5. Exit
	.....Enter Your Choice:1
	Enter a Telephone No:123
	Enter a Client Name:abc

	.....Do you want to insert more key:y/n:y
	Enter a Telephone No:456
	Enter a Client Name:efg

	.....Do you want to insert more key:y/n:y
	Hash Table is Full
	*****Telephone(ADT)*****
	1. Insert
	2. Display
	3. Find
	4. Delete
	5. Exit
	.....Enter Your Choice:2
		Key	Name
	h[0]	-1	NULL
	h[1]	-1	NULL
	h[2]	-1	NULL
	h[3]	123	abc
	h[4]	-1	NULL
	h[5]	-1	NULL
	h[6]	456	efg
	h[7]	-1	NULL
	h[8]	-1	NULL
	h[9]	-1	NULL
	*****Telephone(ADT)*****
	1. Insert
	2. Display
	3. Find
	4. Delete
	5. Exit
	.....Enter Your Choice:3
	Enter a key which you want to search:123
	123 is found at 3 Location With Name abc
	*****Telephone(ADT)*****
	1. Insert
	2. Display
	3. Find
	4. Delete
	5. Exit
	.....Enter Your Choice:3
	Enter a key which you want to search:789
	Key Not Found
	*****Telephone(ADT)*****
	1. Insert
	2. Display
	3. Find
	4. Delete
	5. Exit
	.....Enter Your Choice:4
	Enter a key which you want to delete:123
	123 is found at 3 Location With Name abc	
Key is Deleted
	*****Telephone(ADT)*****
	1. Insert
	2. Display
	3. Find
	4. Delete
	5. Exit
	.....Enter Your Choice:4
	Enter a key which you want to delete:789
	Key Not Found
	*****Telephone(ADT)*****
	1. Insert
	2. Display
	3. Find
	4. Delete
	5. Exit
	.....Enter Your Choice:5
	Exiting program
